function [ f, trajectories ] = evaluate_objective(x, M, V, sys_param)
%
% function f = evaluate_objective(x, M, V, sys_param)
%
% Function to evaluate the objective functions for the given input vector x.%
% x is an array of decision variables and f(1), f(2), etc are the
% objective functions. The algorithm always minimizes the objective
% function hence if you would like to maximize the function then multiply
% the function by negative one. M is the numebr of objective functions and
% V is the number of decision variables. 
%
% This functions is basically written by the user who defines his/her own
% objective function. Make sure that the M and V matches your initial user
% input.

x = x(1:V) ;
x = x(:)   ;

%tic

% 1) Recover data and parameters from structure 'sys_param'
e       = sys_param.nsga.e       ; % vector (T,1)
I       = sys_param.nsga.I       ; % vector (T,1)
env_min = sys_param.nsga.env_min ; % vector (T,1)
Qtarget = sys_param.nsga.Qtarget ; % vector (T,1)
idx     = sys_param.nsga.idx     ; % vector (T,1)
s0      = sys_param.s0           ; % scalar 
s_min   = sys_param.s_min        ; % scalar 
s_max   = sys_param.s_max        ; % scalar 
delta   = sys_param.delta        ; % scalar
op_rule = sys_param.operating_rule ; % string
Q_max_down  = sys_param.Q_max_down  ; % scalar 
res_perf_id = sys_param.res_perf_id ; % choose which performance indicators to use for optimisation;

% 2) Transform the decision variables generated by NSGA-II algorithm into 
% the right format for being used by the operating policy function:
x = op_piecewise_linear_transform(x,idx,s_max,Qtarget,delta) ;

% 3) Simulate the reservoir system:
[ s, Qreg, Qspill ] = reservoir_simulation( I, e, env_min, s0, s_min, s_max, op_rule, x, delta ) ;

% 4) Compute performances and select which metrics to pass back to NSGA-II
% algorithm: 
[ Rel_reg, Def_reg, Vul_reg, Rel_spill, Qmax_spill] = compute_res_perf( Qreg, Qtarget, Qspill+Qreg, Q_max_down, 0 );
res_perf = [ Rel_reg, Def_reg, Vul_reg, Rel_spill, Qmax_spill] ;
f = res_perf(res_perf_id) ;

% 5) Save simulated trajectories:
trajectories.s      = s      ; 
trajectories.Qreg   = Qreg   ; 
trajectories.Qspill = Qspill ; 

%tc = toc

% Check for error
if length(f) ~= M
    error('The number of decision variables does not match you previous input. Kindly check your objective function');
end